'use strict';

var config = hexo.config; // Ëé∑Âèñ Hexo ÈÖçÁΩÆ
const fs = require('hexo-fs'); // Áî®‰∫éÊñá‰ª∂Êìç‰Ωú
const path = require("path");

const DATA_DIR = path.join(hexo.source_dir, "_data"); // HexoÁöÑsource/_dataÁõÆÂΩï
const CACHE_FILE = path.join(DATA_DIR, "translation_cache.json");

function initDataDir() {
    if (!fs.existsSync(DATA_DIR)) {
        fs.mkdirsSync(DATA_DIR); // ‰ΩøÁî® hexo-fs ÁöÑÈÄíÂΩíÂàõÂª∫ÁõÆÂΩï
        hexo.log.info(`\x1b[33m‡∏Ö(^‚óï·¥•‚óï^)‡∏Ö ÊàêÂäüÂè¨Âî§Êï∞ÊçÆÂ∞èÂ±ã ‚Üí \x1b[4m${DATA_DIR}\x1b[0m\x1b[33m ÂñµÔºÅ\x1b[0m`);
    }
}
// ËØªÂèñÁºìÂ≠ò
function loadCache() {

    if (fs.existsSync(CACHE_FILE)) {
        try {
            initDataDir(); // Á°Æ‰øùÁõÆÂΩïÂ≠òÂú®
            return JSON.parse(fs.readFileSync(CACHE_FILE, { encoding: 'utf8' }) || '{}');
        } catch (err) {
            hexo.log.error('\x1b[41m(>Ôπè<) ÁºìÂ≠òÊñá‰ª∂ËØªÂèñÂá∫ÈóÆÈ¢ò‰∫ÜÂñµ ‚Üí\x1b[0m', err);
            return {};
        }
    }
    return {};
}
// ÂÜôÂÖ•ÁºìÂ≠ò
function saveCache(cache) {
    try {
        fs.writeFileSync(CACHE_FILE, JSON.stringify(cache, null, 2), 'utf-8');
        hexo.log.info(`\x1b[32m(^‚àá^) ÁºìÂ≠ò‰øùÂ≠òÊàêÂäüÔºÅÂÖ±Â≠òÂÇ® ${Object.keys(cache).length} ‰∏™ÁøªËØëËÆ∞ÂøÜÂï¶~`);
    } catch (err) {
        hexo.log.warn('\x1b[43m(,,„ÉªÔπè„Éª,,) ÁºìÂ≠ò‰øùÂ≠òÂ§±Ë¥•ÔºåÂ∞ëÂ•≥Á¥ßÊÄ•‰øÆÂ§ç‰∏≠ ‚Üí\x1b[0m', err);
    }
}
// Â§ÑÁêÜÁøªËØëÁªìÊûúÂπ∂ÁºìÂ≠ò
function handleTranslation(data, sanitizedTitle, translatedTitle) {
    let cache = loadCache(); // ËØªÂèñÁºìÂ≠ò
    // Â¶ÇÊûúÁøªËØëÂèëÁîüÂèòÂåñÔºåÊõ¥Êñ∞ÁºìÂ≠ò
    if (translatedTitle !== sanitizedTitle) {
        hexo.log.info(`ÊàêÂäüÁøªËØëÂ∞Ü${sanitizedTitle}ÁøªËØë‰∏∫${translatedTitle}`);
        data.Translate_title = translatedTitle.replace(/\s+/g, "-");
        cache[sanitizedTitle] = data.Translate_title; // ÁºìÂ≠òÁøªËØëÁªìÊûú
        saveCache(cache); // ÂÜôÂÖ•Êñá‰ª∂ÁºìÂ≠ò
    } else {
        hexo.log.info(`\x1b[37m(¬¥‚Ä¢Ô∏µ‚Ä¢\`) Ê†áÈ¢òÊ≤°ÊúâÂèòÂåñÔºå\x1b[3m„Äé${sanitizedTitle}„Äè\x1b[0m\x1b[37m Â∞ëÂ•≥ÊâòËÖÆÂèëÂëÜ‰∏≠...\x1b[0m`);
    }

    return data;
}

hexo.extend.filter.register('before_post_render', async function (data) {
    let cache = loadCache(); // ËØªÂèñÁºìÂ≠ò
    const sanitizedTitle = data.title
        .replace(/[^\w\s\u4e00-\u9fa5]/g, "") // ÁßªÈô§ÁâπÊÆäÂ≠óÁ¨¶
        .replace(/\s+/g, "-");

    //console.log("Ê£ÄÊµãÂà∞ÈªòËÆ§ËØ≠Ë®Ä‰∏∫:", config.language);
    const languageCode = config.language.split('-')[0];
    //console.log("ËΩ¨Êç¢‰∏∫ÈÄöÁî®ËØ≠Ë®Ä‰ª£Á†Å", languageCode);

    // Â¶ÇÊûúÁºìÂ≠òÂ∑≤Â≠òÂú®ËØ•Ê†áÈ¢òÔºåÁõ¥Êé•ËøîÂõû
    if (cache[sanitizedTitle]) {
        hexo.log.info(`\x1b[36m‡∏Ö^‚Ä¢Ôªå‚Ä¢^‡∏Ö ‰ªéÁºìÂ≠òÂ†ÜÈáåÂà®Âá∫Èó™Èó™ÂèëÂÖâÁöÑ \x1b[1m\x1b[4müìñ„Äé${sanitizedTitle}„Äè\x1b[0m\x1b[36m ‡∏Ö( Ã≥‚Ä¢ ¬∑Ã´ ‚Ä¢ Ã≥)  \x1b[32mÔΩû‚û°Ô∏èÔΩû  \x1b[35m‚ú®${cache[sanitizedTitle]}‚ú®\x1b[0m\x1b[36m ÂñµÂñµÂ¶ôÊâãgetÔºÅ(‚âßœâ‚â¶)„Çû\x1b[0m`);
        data.Translate_title = cache[sanitizedTitle];
        return data;
    }
    const translatedTitle = await Translate(sanitizedTitle, languageCode);

    return handleTranslation(data, sanitizedTitle, translatedTitle);

}, 5);

// ÁøªËØëÂáΩÊï∞ÔºåË∞ÉÁî® LibreTranslate API ËøõË°åÁøªËØë
const translate_api_url = "https://asfag654-libretranslate.hf.space/translate";
async function Translate(title, source) {

    try {
        hexo.log.info(`\x1b[34m(„ÄÇ-œâ-)zzz Â∞ëÂ•≥Â•ãÁ¨îÁñæ‰π¶ÁøªËØë‰∏≠Ôºö\x1b[3m„Äé${title}„Äè\x1b[0m\x1b[34m ...`);
        const res = await fetch(translate_api_url, {
            method: "POST",
            body: JSON.stringify({
                q: title, // Ë¶ÅÁøªËØëÁöÑÊñáÊú¨
                source: source, // ‰∏çÊ£ÄÊµãÊ∫êËØ≠Ë®ÄÔºåÈªòËÆ§‰∏≠Êñá
                target: "en",   // ÁøªËØëÁõÆÊ†áËØ≠Ë®Ä‰∏∫Ëã±Êñá
            }),
            headers: { "Content-Type": "application/json" },
        });

        const translateData = await res.json();

        if (translateData?.translatedText) {
            return translateData.translatedText;
        } else {
            hexo.log.error("\x1b[45m(;¬¥‡ºé‡∫∂–î‡ºé‡∫∂`) Â∞ëÂ•≥‰∏∫‰Ω†ÁóõÂì≠ÔºåÁøªËØëAPIÊäΩÈ£éÂï¶ÔºÅÂìçÂ∫îÊï∞ÊçÆ ‚Üí\x1b[0m", translateData);
            return title;
        }
    } catch (error) {
        hexo.log.error("\x1b[45m(„Å§–î\`) ÁøªËØëAPIËøûÊé•Â§±Ë¥•ÔºåÂ∞ëÂ•≥Âì≠Âì≠... ÈîôËØØ‰ø°ÊÅØ ‚Üí\x1b[0m", error);
        return title;
    }
}
