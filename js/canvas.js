class ParticleBackground{constructor(t={}){this.config=Object.assign({zIndex:-1,opacity:1,color:"255,0,0",count:85},t),this.particles=[],this.mouse={x:null,y:null,max:2e4},this.initCanvas(),this.initParticles(),this.bindEvents(),this.animate()}initCanvas(){this.canvas=document.createElement("canvas"),this.canvas.style.cssText=`position:fixed;top:0;left:0;z-index:${this.config.zIndex};opacity:${this.config.opacity};`,document.body.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.resizeCanvas(),this.resizeObserver=new ResizeObserver(()=>this.resizeCanvas()),this.resizeObserver.observe(document.body)}resizeCanvas(){this.width=this.canvas.width=window.innerWidth,this.height=this.canvas.height=window.innerHeight}initParticles(){for(let t=0;t<this.config.count;t++)this.particles.push({x:Math.random()*this.width,y:Math.random()*this.height,xa:2*Math.random()-1,ya:2*Math.random()-1,max:6e3,color:this.randomColor()});this.particles.push(this.mouse)}randomColor(){return`rgba(${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},1)`}bindEvents(){window.addEventListener("mousemove",t=>{this.mouse.x=t.clientX,this.mouse.y=t.clientY}),window.addEventListener("mouseout",()=>{this.mouse.x=null,this.mouse.y=null})}animate(){this.ctx.clearRect(0,0,this.width,this.height),this.particles.forEach((t,i)=>{t!==this.mouse&&(t.x+=t.xa,t.y+=t.ya,(t.x>this.width||t.x<0)&&(t.xa*=-1),(t.y>this.height||t.y<0)&&(t.ya*=-1),this.ctx.fillStyle=t.color,this.ctx.fillRect(t.x-.5,t.y-.5,1,1),this.checkConnections(t,i))}),requestAnimationFrame(()=>this.animate())}checkConnections(t,i){for(let e=i+1;e<this.particles.length;e++){let i=this.particles[e];if(!i.x||!i.y)continue;let s=t.x-i.x,n=t.y-i.y,o=s*s+n*n;if(o<i.max){this.handleMouseInteraction(t,i,o,s,n);let e=(i.max-o)/i.max;this.ctx.beginPath(),this.ctx.lineWidth=e/2,this.ctx.strokeStyle=t.color,this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke()}}}handleMouseInteraction(t,i,e,s,n){i===this.mouse&&e>=i.max/2&&(t.x-=.03*s,t.y-=.03*n)}destroy(){window.removeEventListener("mousemove",this.mouseMoveHandler),window.removeEventListener("mouseout",this.mouseOutHandler),this.resizeObserver.disconnect(),this.canvas.remove()}}const particleBg=new ParticleBackground({zIndex:-1,opacity:.8,color:"0,255,255",count:100});
//# sourceMappingURL=search.js.map